-- 000_local_auth_stub.sql
-- Local dev shim: creates a minimal auth schema and stub functions so migrations that reference
-- auth.users, auth.uid() and auth.role() succeed on a plain Postgres used for local development.

CREATE SCHEMA IF NOT EXISTS auth;

-- Minimal users table used only for local development/testing. In Supabase this is managed by the Auth service.
CREATE TABLE IF NOT EXISTS auth.users (
  id UUID PRIMARY KEY,
  email TEXT,
  raw_user_meta_data JSONB DEFAULT '{}'::jsonb
);

-- Stub functions used by RLS policies and triggers in the project. These are local-only and return NULL or a default role.
-- auth.uid() - returns NULL by default. You can override behavior by setting the postgres setting `jwt.claims.sub`.
CREATE OR REPLACE FUNCTION auth.uid()
RETURNS UUID AS $$
  SELECT NULL::uuid;
$$ LANGUAGE sql STABLE;

-- auth.role() - for local dev return 'authenticated' by default.
CREATE OR REPLACE FUNCTION auth.role()
RETURNS TEXT AS $$
  SELECT 'authenticated'::text;
$$ LANGUAGE sql STABLE;

-- Create a Postgres role named 'authenticated' for policy creation in local dev
DO $$
BEGIN
  IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'authenticated') THEN
    CREATE ROLE authenticated;
  END IF;
END;
$$;

-- For safety, create an extension used by other migrations if missing
CREATE EXTENSION IF NOT EXISTS "pgcrypto";
