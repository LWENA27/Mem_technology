name: Build Multi-Platform Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.24.3'

jobs:
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build web
        run: flutter build web --release
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: Archive web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: 30

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK (Universal)
        run: flutter build apk --release

      - name: Build APK (Split per ABI)
        run: flutter build apk --release --split-per-abi

      - name: Create Android release package
        run: |
          mkdir -p android-release
          cp build/app/outputs/flutter-apk/app-release.apk android-release/inventorymaster-universal.apk
          cp build/app/outputs/flutter-apk/app-arm64-v8a-release.apk android-release/inventorymaster-arm64.apk
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk android-release/inventorymaster-arm32.apk
          cp build/app/outputs/flutter-apk/app-x86_64-release.apk android-release/inventorymaster-x86_64.apk

      - name: Archive Android builds
        uses: actions/upload-artifact@v4
        with:
          name: android-builds
          path: android-release/
          retention-days: 30

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Archive Windows build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/x64/runner/Release/
          retention-days: 30

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop

      - name: Install dependencies
        run: flutter pub get

      - name: Build macOS
        run: flutter build macos --release

      - name: Archive macOS build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos/Build/Products/Release/
          retention-days: 30

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Install dependencies
        run: flutter pub get

      - name: Build Linux
        run: flutter build linux --release

      - name: Archive Linux build
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/x64/release/bundle/
          retention-days: 30

  create-release:
    name: Create Release
    needs: [build-web, build-android, build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create release packages
        run: |
          # Web package
          cd web-build
          zip -r ../inventorymaster-web.zip .
          cd ..
          
          # Android packages
          cd android-builds
          zip -r ../inventorymaster-android.zip .
          cd ..
          
          # Windows package
          cd windows-build
          zip -r ../inventorymaster-windows.zip .
          cd ..
          
          # macOS package
          cd macos-build
          zip -r ../inventorymaster-macos.zip .
          cd ..
          
          # Linux package
          cd linux-build
          tar -czf ../inventorymaster-linux.tar.gz .
          cd ..

      - name: Generate checksums
        run: |
          echo "# InventoryMaster SaaS Release Checksums" > checksums.txt
          echo "" >> checksums.txt
          echo "## SHA256 Checksums" >> checksums.txt
          echo "" >> checksums.txt
          sha256sum *.zip *.tar.gz >> checksums.txt

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: InventoryMaster SaaS ${{ github.ref_name }}
          body: |
            # InventoryMaster SaaS ${{ github.ref_name }}
            
            ## üöÄ Multi-Platform Release
            
            This release includes builds for all supported platforms:
            
            ### üì¶ Downloads
            - **Web Application** (`inventorymaster-web.zip`): Deploy to any web hosting service
            - **Android Mobile** (`inventorymaster-android.zip`): Contains multiple APK variants
            - **Windows Desktop** (`inventorymaster-windows.zip`): Windows 10/11 executable
            - **macOS Desktop** (`inventorymaster-macos.zip`): macOS 10.14+ application
            - **Linux Desktop** (`inventorymaster-linux.tar.gz`): Ubuntu 18.04+ compatible
            
            ### üîß Installation
            1. Download the appropriate package for your platform
            2. Follow the installation guide in each package
            3. Configure your Supabase credentials for full functionality
            
            ### ‚ú® Features
            - Multi-tenant inventory management
            - Product catalog with multiple images
            - Real-time synchronization
            - Cross-platform compatibility
            - Sales tracking and reporting
            
            ### üìã System Requirements
            - **Web**: Modern browser, internet connection
            - **Android**: Android 5.0+, 2GB RAM, 100MB storage
            - **Windows**: Windows 10/11 (64-bit), 4GB RAM, 1GB storage
            - **macOS**: macOS 10.14+, 4GB RAM, 1GB storage
            - **Linux**: Ubuntu 18.04+, 4GB RAM, 1GB storage
            
            ### üõ†Ô∏è Support
            - [GitHub Issues](https://github.com/LWENA27/Mem_technology/issues)
            - Email: support@lwenatech.com
            
            ---
            
            **Checksums**: See `checksums.txt` for file verification
          files: |
            inventorymaster-web.zip
            inventorymaster-android.zip
            inventorymaster-windows.zip
            inventorymaster-macos.zip
            inventorymaster-linux.tar.gz
            checksums.txt
          draft: false
          prerelease: false